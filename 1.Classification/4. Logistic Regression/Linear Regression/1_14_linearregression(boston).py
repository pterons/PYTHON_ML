# -*- coding: utf-8 -*-
"""1-14.LinearRegression(boston).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A3D5YSZXbDIclrWJjEYOJFbtVwGoMTY7
"""

# LinearRegression으로 Boston Housing 데이터를 학습한다.
# --------------------------------------------------------------------
import numpy as np
import pandas as pd
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler

# 데이터를 읽어온다.
boston = load_boston()

# 데이터를 표준화한다.
scaleX = StandardScaler()
scaleY = StandardScaler()

feature_data = scaleX.fit_transform(boston.data)
target_data = scaleY.fit_transform(boston.target.reshape(-1, 1))

# 학습 데이터와 시험 데이터로 분리한다.
x_train, x_test, y_train, y_test = train_test_split(feature_data, target_data, test_size=0.2)

# Linear Regression으로 Train 데이터 세트를 학습한다.
model = LinearRegression()
model.fit(x_train, y_train)

# testX[n]에 해당하는 target (price)을 추정한다.
n = 0

df = pd.DataFrame([x_test[n]])
df.columns = boston['feature_names']
print(df)

price = model.predict(x_test[n].reshape(1,-1))
print('\n추정 price = %.2f' % (scaleY.inverse_transform(price)))
print('실제 price = %.2f' % (scaleY.inverse_transform(y_test[n])))

# 시험 데이터 전체의 오류를 R-square로 표시한다.
print('시험 데이터 전체 오류 (R2-score) = %.4f' % model.score(x_test, y_test))

